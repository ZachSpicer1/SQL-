----------------------------------------------------------------
-- Script File Name:	SQLLAB
-- Developer:   ZACH SPICER    
-- Creation Date:	12/3/2018
-- Description: Create Table, Insert, Update, Delete , Alter, Create View, Create Index, Create Procedure
--				Drop, Select, and Execute commands
----------------------------------------------------------------

-- *************************************************************
-- Solmaris Condominium Group - Create, Insert, Update, Delete, Alter, Drop
-- *************************************************************
/*
-- A.
CREATE TABLE ZSPICER.LARGE_CONDO
(LOCATION_NUM INT NOT NULL,
UNIT_NUM CHAR(3) NOT NULL,
BDRMS INT ,
BATHS INT,
CONDO_FEE DECIMAL(6,2) DEFAULT 0.00,
OWNER_NUM CHAR(5) NOT NULL
PRIMARY KEY(LOCATION_NUM, UNIT_NUM));

-- B.
INSERT INTO ZSPICER.LARGE_CONDO
SELECT LOCATION_NUM, UNIT_NUM, BDRMS, BATHS, CONDO_FEE, OWNER_NUM
FROM ZSPICER.CONDO_UNIT
WHERE SQR_FT > 1500;

--C.
UPDATE ZSPICER.LARGE_CONDO
SET CONDO_FEE = CONDO_FEE + 150.00;

--D.
UPDATE ZSPICER.LARGE_CONDO
SET CONDO_FEE = (CONDO_FEE * .01) + CONDO_FEE
WHERE CONDO_FEE > 750.00;

--E.
INSERT INTO ZSPICER.LARGE_CONDO
VALUES (3, '605', 3, 3, 775.00, 'FE182')

-- F.
DELETE FROM ZSPICER.LARGE_CONDO
WHERE OWNER_NUM = 'AN175';

--G.
UPDATE ZSPICER.LARGE_CONDO
SET BDRMS = NULL
WHERE LOCATION_NUM = 1 AND
UNIT_NUM = '503';

-- H.
ALTER TABLE ZSPICER.LARGE_CONDO
ADD OCCUPIED CHAR(1);

--I.
UPDATE ZSPICER.LARGE_CONDO
SET OCCUPIED = 'Y';

--J.
UPDATE ZSPICER.LARGE_CONDO
SET OCCUPIED = 'N'
WHERE UNIT_NUM = 'C06';

--K.
ALTER TABLE ZSPICER.LARGE_CONDO
ALTER COLUMN CONDO_FEE DECIMAL(6,2) NOT NULL;

--L.
CREATE VIEW ZSPICER.SMALL_CONDO AS
SELECT LOCATION_NUM, UNIT_NUM, SQR_FT, OWNER_NUM
FROM ZSPICER.CONDO_UNIT
WHERE SQR_FT < 1100;

--M.
CREATE VIEW ZSPICER.FEE_GT_500 AS
SELECT LOCATION_NUM, UNIT_NUM,CONDO_FEE, OWNER_NUM
FROM ZSPICER.CONDO_UNIT
WHERE CONDO_FEE >= 500.00;

--N.
CREATE VIEW ZSPICER.CONDO_OWNERS AS
SELECT LOCATION_NUM, UNIT_NUM, SQR_FT, CONDO_FEE, LAST_NAME
FROM ZSPICER.CONDO_UNIT, ZSPICER.OWNER
WHERE CONDO_UNIT.OWNER_NUM = OWNER.OWNER_NUM;
--O.
CREATE VIEW ZSPICER.BIG_BDRMS_FEE AS
SELECT LOCATION_NUM, UNIT_NUM, BDRMS, CONDO_FEE, LAST_NAME
FROM ZSPICER.CONDO_UNIT, ZSPICER.OWNER
WHERE BDRMS = 3 
AND
CONDO_FEE > 500.00
AND
CONDO_UNIT.OWNER_NUM = OWNER.OWNER_NUM;

--P.
CREATE VIEW ZSPICER.AVG_CONDO_FEE AS
SELECT CAST(AVG(CONDO_FEE) AS DECIMAL (10,2)) AS AVERAGE_FEE
FROM ZSPICER.CONDO_UNIT

--Q.
CREATE VIEW ZSPICER.FL_OWNERS AS 
SELECT LOCATION_NUM, UNIT_NUM, FIRST_NAME, LAST_NAME, STATE
FROM ZSPICER.CONDO_UNIT, ZSPICER.OWNER
WHERE STATE = 'FL'
AND
CONDO_UNIT.OWNER_NUM = OWNER.OWNER_NUM;

--R.
CREATE VIEW ZSPICER.DE_PA_OWNERS AS
SELECT LOCATION_NUM, UNIT_NUM, FIRST_NAME, LAST_NAME, STATE
FROM ZSPICER.CONDO_UNIT, ZSPICER.OWNER
WHERE CONDO_UNIT.OWNER_NUM = OWNER.OWNER_NUM
AND
STATE IN
	(SELECT STATE
	FROM ZSPICER.OWNER
	WHERE STATE = 'DE'
	OR STATE = 'PA')

--S.
CREATE VIEW ZSPICER.OPEN_STATUS AS
SELECT SERVICE_ID, CONDO_ID, STATUS
FROM ZSPICER.SERVICE_REQUEST
WHERE STATUS = 'OPEN';

--T.
CREATE INDEX OWNER_INDEX1 ON ZSPICER.OWNER(STATE);

--U.
CREATE INDEX OWNER_INDEX2 ON ZSPICER.OWNER(LAST_NAME);

--V.
CREATE INDEX OWNER_INDEX3 ON ZSPICER.OWNER(STATE DESC, CITY);

--W.
ALTER TABLE ZSPICER.CONDO_UNIT
ADD FOREIGN KEY(OWNER_NUM) REFERENCES ZSPICER.OWNER;

--X.
ALTER TABLE ZSPICER.CONDO_UNIT
ADD CHECK(BDRMS IN(1, 2, 3));

--Y.

CREATE PROCEDURE ZSPICER.DISP_OWNER_NAME
@ownernum CHAR(5)
AS 
BEGIN
	SELECT OWNER_NUM, FIRST_NAME, LAST_NAME, STATE
	FROM ZSPICER.OWNER
	WHERE OWNER.OWNER_NUM = @ownernum
END


--Z.

CREATE PROCEDURE ZSPICER.DISP_CONDO_INFO
@sqrft INT
AS
BEGIN
	DECLARE @locationnum INT
	DECLARE @unitnum CHAR(3)
	DECLARE @condofee DECIMAL (6,2)
	DECLARE @ownernum CHAR(5)
	DECLARE mycursor CURSOR

	FOR
		SELECT LOCATION_NUM, UNIT_NUM, CONDO_FEE, OWNER_NUM
		FROM ZSPICER.CONDO_UNIT
		WHERE CONDO_UNIT.SQR_FT = @sqrft

		OPEN mycursor 
		FETCH NEXT FROM mycursor
		INTO @locationnum, @unitnum, @condofee, @ownernum

		WHILE @@FETCH_STATUS = 0
		BEGIN
			PRINT CAST((@locationnum)AS VARCHAR) + ' ' + @unitnum + ' ' + CAST((@condofee) AS VARCHAR) + ' ' + @ownernum
			FETCH NEXT FROM mycursor
			INTO @locationnum, @unitnum, @condofee, @ownernum
		END
END

CLOSE mycursor
DEALLOCATE mycursor  

-- AA.
DROP TABLE ZSPICER.NONGAME

--BB.
DROP TABLE ZSPICER.PADDLING
*/
-- *************************************************************
-- Generate Query Results 
-- ************************************************************* 

--1. 
SELECT * FROM ZSPICER.SMALL_CONDO;

--2.
SELECT * FROM ZSPICER.FEE_GT_500;

--3.
SELECT * FROM ZSPICER.CONDO_OWNERS;

--4.
SELECT * FROM ZSPICER.BIG_BDRMS_FEE;

--5.
SELECT * FROM ZSPICER.AVG_CONDO_FEE;

--6.
SELECT * FROM ZSPICER.FL_OWNERS;

--7.
SELECT * FROM ZSPICER.DE_PA_OWNERS;

--8.
SELECT * FROM ZSPICER.OPEN_STATUS

--9.
SELECT LOCATION.LOCATION_NUM, UNIT_NUM, CONDO_FEE, CONDO_UNIT.OWNER_NUM, FIRST_NAME, LAST_NAME
FROM ZSPICER.LOCATION, ZSPICER.CONDO_UNIT, ZSPICER.OWNER
WHERE LOCATION.LOCATION_NUM = CONDO_UNIT.LOCATION_NUM
AND
CONDO_UNIT.OWNER_NUM = OWNER.OWNER_NUM;

--10.
SELECT CONDO_UNIT.CONDO_ID, DESCRIPTION, STATUS ,CATEGORY_DESCRIPTION
FROM ZSPICER.CONDO_UNIT, ZSPICER.SERVICE_REQUEST, ZSPICER.SERVICE_CATEGORY 
WHERE CONDO_UNIT.CONDO_ID = SERVICE_REQUEST.CONDO_ID
AND SERVICE_REQUEST.CATEGORY_NUM = SERVICE_CATEGORY.CATEGORY_NUM
AND CATEGORY_DESCRIPTION = 'Janitorial';

--11.
SELECT SERVICE_REQUEST.CONDO_ID, LOCATION_NUM, UNIT_NUM, EST_HOURS, SPENT_HOURS, CONDO_UNIT.OWNER_NUM, LAST_NAME, CATEGORY_DESCRIPTION
FROM ZSPICER.SERVICE_REQUEST, ZSPICER.CONDO_UNIT, ZSPICER.SERVICE_CATEGORY, ZSPICER.OWNER
WHERE CONDO_UNIT.CONDO_ID = SERVICE_REQUEST.CONDO_ID
AND SERVICE_REQUEST.CATEGORY_NUM = SERVICE_CATEGORY.CATEGORY_NUM
AND CONDO_UNIT.OWNER_NUM = OWNER.OWNER_NUM
AND CATEGORY_DESCRIPTION = 'Janitorial';

--12.
SELECT FIRST_NAME, LAST_NAME
FROM ZSPICER.OWNER, ZSPICER.CONDO_UNIT
WHERE OWNER.OWNER_NUM = CONDO_UNIT.OWNER_NUM
AND BDRMS IN 
	(SELECT BDRMS
	FROM ZSPICER.CONDO_UNIT
	WHERE BDRMS = 3)
GROUP BY OWNER.FIRST_NAME, OWNER.LAST_NAME

--13.
SELECT FIRST_NAME, LAST_NAME
FROM ZSPICER.OWNER, ZSPICER.CONDO_UNIT
WHERE EXISTS
	(SELECT *
	FROM ZSPICER.CONDO_UNIT
	WHERE OWNER.OWNER_NUM = CONDO_UNIT.OWNER_NUM
	AND BDRMS = 3)
GROUP BY OWNER.FIRST_NAME, OWNER.LAST_NAME

--14.
SELECT FST.UNIT_NUM,  SEC.UNIT_NUM, FST.SQR_FT
FROM ZSPICER.CONDO_UNIT FST, ZSPICER.CONDO_UNIT SEC
WHERE FST.UNIT_NUM > SEC.UNIT_NUM
AND FST.SQR_FT = SEC.SQR_FT
ORDER BY FST.UNIT_NUM 

-- 15.
SELECT SQR_FT, CONDO_UNIT.OWNER_NUM, LAST_NAME, FIRST_NAME, LOCATION_NUM
FROM ZSPICER.CONDO_UNIT, ZSPICER.OWNER
WHERE CONDO_UNIT.OWNER_NUM = OWNER.OWNER_NUM
AND LOCATION_NUM = 1;

--16.
SELECT SQR_FT, CONDO_UNIT.OWNER_NUM, LAST_NAME, FIRST_NAME, LOCATION_NUM, BDRMS 
FROM ZSPICER.CONDO_UNIT, ZSPICER.OWNER
WHERE CONDO_UNIT.OWNER_NUM = OWNER.OWNER_NUM
AND BDRMS = 3
AND LOCATION_NUM = 1;

-- 17.
SELECT LOCATION_NUM, UNIT_NUM, CONDO_FEE, BDRMS
FROM ZSPICER.CONDO_UNIT, ZSPICER.OWNER
WHERE CONDO_UNIT.OWNER_NUM = OWNER.OWNER_NUM
AND STATE = 'FL'
UNION
SELECT LOCATION_NUM, UNIT_NUM, CONDO_FEE, BDRMS
FROM ZSPICER.CONDO_UNIT
WHERE BDRMS = 1;

--18.
SELECT LOCATION_NUM, UNIT_NUM, CONDO_FEE, BDRMS
FROM ZSPICER.OWNER, ZSPICER.CONDO_UNIT
WHERE CONDO_UNIT.OWNER_NUM = OWNER.OWNER_NUM
AND STATE = 'FL'
AND BDRMS = 1;

--19.
SELECT LOCATION_NUM, UNIT_NUM, CONDO_FEE, BDRMS
FROM ZSPICER.CONDO_UNIT, ZSPICER.OWNER
WHERE CONDO_UNIT.OWNER_NUM = OWNER.OWNER_NUM
AND STATE = 'DE'
AND BDRMS NOT IN
	(SELECT BDRMS
	FROM ZSPICER.CONDO_UNIT
	WHERE BDRMS = 1)

-- 20.
SELECT SERVICE_ID, CONDO_ID
FROM ZSPICER.SERVICE_REQUEST
WHERE EST_HOURS > ANY
	(SELECT EST_HOURS
	FROM ZSPICER.SERVICE_REQUEST
	WHERE CATEGORY_NUM = 5)

--21.
SELECT SERVICE_ID, CONDO_ID
FROM ZSPICER.SERVICE_REQUEST
WHERE EST_HOURS > ALL
	(SELECT EST_HOURS
	FROM ZSPICER.SERVICE_REQUEST
	WHERE CATEGORY_NUM = 5)

-- 22.
SELECT CONDO_UNIT.CONDO_ID, SQR_FT, OWNER_NUM, SERVICE_ID, EST_HOURS, SPENT_HOURS, CATEGORY_NUM
FROM ZSPICER.CONDO_UNIT, ZSPICER.SERVICE_REQUEST
WHERE CONDO_UNIT.CONDO_ID = SERVICE_REQUEST.CONDO_ID
AND CATEGORY_NUM = 4

--23.
SELECT CONDO_UNIT.CONDO_ID, SQR_FT, OWNER_NUM, SERVICE_ID, EST_HOURS, SPENT_HOURS, CATEGORY_NUM
FROM ZSPICER.CONDO_UNIT
LEFT JOIN ZSPICER.SERVICE_REQUEST
ON CONDO_UNIT.CONDO_ID = SERVICE_REQUEST.CONDO_ID

--24.
SELECT OWNER_NUM, UPPER(FIRST_NAME) AS UPPERCASE_FIRST, LOWER(LAST_NAME) AS LOWERCASE_LAST
FROM ZSPICER.OWNER 

--25.
SELECT OWNER_NUM, FIRST_NAME, LAST_NAME, CITY
FROM ZSPICER.OWNER
WHERE CITY = UPPER('BOWTON')

--26.
SELECT LOCATION_NUM, UNIT_NUM, CONDO_UNIT.OWNER_NUM, LAST_NAME, CONDO_FEE, ROUND((CONDO_FEE - (CONDO_FEE * .025)), 0) AS DISCOUNTED_FEE
FROM ZSPICER.CONDO_UNIT, ZSPICER.OWNER
WHERE CONDO_UNIT.OWNER_NUM = OWNER.OWNER_NUM


-- *************************************************************
-- Generate Stored Procedure Query Results
-- *************************************************************

--27.
EXECUTE ZSPICER.DISP_OWNER_NAME 'YO117'

--28.
EXECUTE ZSPICER.DISP_CONDO_INFO 1084
